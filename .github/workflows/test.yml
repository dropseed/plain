name: test
on:
  push: {}
  pull_request: {}

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: plain
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
      mysql:
        image: mysql:8
        env:
          MYSQL_ROOT_PASSWORD: mysql
          MYSQL_DATABASE: plain
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -h localhost -u root --password=mysql"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
    strategy:
      matrix:
        python-version: ["3.11", "3.12", "3.13"]
        database: [sqlite, postgres, mysql]

    env:
      PACKAGES: plain plain-worker plain-flags plain-sessions plain-admin plain-oauth plain-auth plain-models plain-api plain-elements plain-htmx

    steps:
    - uses: actions/checkout@v4
    - name: Install uv
      uses: astral-sh/setup-uv@v2
    - name: Set up Python
      run: uv python install ${{ matrix.python-version }}
    - name: Configure DATABASE_URL
      run: |
        case "${{ matrix.database }}" in
          sqlite)
            echo "DATABASE_URL=sqlite://:memory:" >> "$GITHUB_ENV"
            ;;
          postgres)
            echo "DATABASE_URL=postgres://postgres:postgres@localhost:5432/plain" >> "$GITHUB_ENV"
            uv pip install psycopg[binary]
            ;;
          mysql)
            echo "DATABASE_URL=mysql://root:mysql@localhost:3306/plain" >> "$GITHUB_ENV"
            uv pip install mysqlclient
            ;;
        esac
    - name: Run tests
      run: ./scripts/test

  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Install uv
      uses: astral-sh/setup-uv@v2
    - name: Set up Python
      run: uv python install
    - working-directory: plain-code
      run: uv sync
    - run: uv run --package plain-code --isolated plain-code check .
