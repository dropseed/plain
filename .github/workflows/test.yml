name: test
on:
  # Run the full test matrix for code merged to the default branch or on tags
  push:
    branches:
      - master
    tags:
      - '*'  # allow running the workflow for any tag (e.g. releases)

  # Run once per pull request (not on the accompanying branch push) so we don't
  # get duplicate CI runs for the same commit.
  pull_request: {}

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: plain
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
      mysql:
        image: mysql:8
        env:
          MYSQL_ROOT_PASSWORD: mysql
          MYSQL_DATABASE: plain
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -h localhost -u root --password=mysql"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
    strategy:
      matrix:
        python-version: ["3.11", "3.12", "3.13"]
        database: [sqlite, postgres, mysql]

    steps:
    - uses: actions/checkout@v4
    - name: Install uv
      uses: astral-sh/setup-uv@v2
    - name: Set up Python
      run: uv python install ${{ matrix.python-version }}
    - name: Install system libraries for database clients
      if: ${{ matrix.database == 'mysql' }}
      run: |
        sudo apt-get update -y
        # Required to compile mysqlclient when prebuilt wheels are not
        # available for the current Python version / architecture.
        sudo apt-get install -y default-libmysqlclient-dev build-essential pkg-config
    - name: Configure DATABASE_URL
      run: |
        case "${{ matrix.database }}" in
          sqlite)
            echo "DATABASE_URL=sqlite://:memory:" >> "$GITHUB_ENV"
            ;;
          postgres)
            echo "DATABASE_URL=postgres://postgres:postgres@localhost:5432/plain" >> "$GITHUB_ENV"
            ;;
          mysql)
            echo "DATABASE_URL=mysql://root:mysql@localhost:3306/plain" >> "$GITHUB_ENV"
            ;;
        esac
    - name: Run tests
      run: ./scripts/test

  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Install uv
      uses: astral-sh/setup-uv@v2
    - name: Set up Python
      run: uv python install
    - working-directory: plain-code
      run: uv sync
    - run: uv run --package plain-code --isolated plain-code check .
