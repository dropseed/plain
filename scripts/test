#!/bin/sh -e

workflow=".github/workflows/test.yml"
packages=$(grep 'PACKAGES:' "$workflow" | sed -E 's/^.*PACKAGES: *//')

if [ $# -gt 0 ] && printf '%s\n' $packages | grep -x "$1" >/dev/null; then
  packages=$1
  shift
fi

bold() {
    echo "\033[1m$1\033[0m"
}

if [ -z "$DATABASE_URL" ]; then
    echo "DATABASE_URL is not set, using DATABASE_URL=sqlite://:memory:"
    export DATABASE_URL="sqlite://:memory:"
else
    echo "Using DATABASE_URL: $DATABASE_URL"
fi

bold "Found packages to test in $workflow: $packages"

for package in $packages;
do
    echo
    bold "Testing $package"
# Install database client libraries as needed for the database matrix.
# We always include both clients so the isolated environment can connect to any
# of the databases used in the GitHub Actions matrix without having to know
# which one is active at runtime. Because the environments are temporary and
# recreated for every package, the additional installation overhead is
# negligible compared to the reliability gain.

    cd "$package/tests"

# Install database client libraries based on the DATABASE_URL scheme. Doing the
# conditional install avoids unnecessary compilation of libraries that may not
# have pre-built wheels available for the current platform (e.g. mysqlclient on
# macOS when only Linux wheels are published).

    with_args=""
    case "$DATABASE_URL" in
        postgres://*)
            # Install both the meta-package (psycopg) and the binary wheels in
            # case the resolver skips the meta-package when only the extra is
            # specified (which can lead to `ModuleNotFoundError: psycopg`).
            with_args="--with psycopg[binary] --with psycopg-binary"
            ;;
        mysql://*)
            with_args="--with mysqlclient"
            ;;
        *)
            # sqlite or unknown scheme -> no additional clients needed
            ;;
    esac

    uv run --package "$package" --isolated $with_args pytest "$@"
    cd ../..
done

for demo in demos/*; do
    echo
    bold "Testing $demo"
    cd "$demo"
    uv run pytest "$@"
    cd ..
done
