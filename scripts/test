#!/bin/bash -e

# Run the test-suite for each first-party package as well as the demo projects.
#
#  • Installs database driver wheels on-demand based on the current
#    $DATABASE_URL scheme (postgres → psycopg, mysql → mysqlclient).

# ---------------------------------------------------------------------------
# CLI option parsing
# ---------------------------------------------------------------------------
# A single package name may be supplied to limit the run; otherwise test all
# first-party packages in a deterministic order.
ALL_PACKAGES="$(cat <<EOF
plain
plain-models
plain-sessions
plain-worker
plain-flags
plain-admin
plain-oauth
plain-auth
plain-api
plain-elements
plain-htmx
EOF
)"

packages=$ALL_PACKAGES
if [ $# -gt 0 ] && printf '%s\n' $ALL_PACKAGES | grep -x "$1" >/dev/null; then
  packages=$1
  shift
fi

# Convenience for bold headings.
bold() { printf '\033[1m%s\033[0m\n' "$1"; }

# ---------------------------------------------------------------------------
# Database URL / optional client wheels
# ---------------------------------------------------------------------------
if [ -z "$DATABASE_URL" ]; then
  echo "DATABASE_URL is not set, using sqlite://:memory:"
  export DATABASE_URL="sqlite://:memory:"
else
  echo "Using DATABASE_URL: $DATABASE_URL"
fi

WITH=""
case "$DATABASE_URL" in
  postgres:*|postgresql:*) WITH="--with psycopg[binary]" ;;
  mysql:*)                 WITH="--with mysqlclient"    ;;
  sqlite:*|sqlite3:*)     WITH=""         ;;
esac

bold "Packages to test: $packages"

for package in $packages; do
  echo
  bold "Testing $package"

  cd "$package/tests"

  set -x
  uv run \
    --isolated \
    --package "$package" \
    $WITH \
    python -m pytest "$@"
  set +x

  cd ../..
done

# Demo projects (smoke-tests only)
for demo in demos/*; do
  echo
  bold "Testing $demo"
  cd "$demo"
  uv run --isolated $WITH python -m pytest "$@"
  cd ..
done
